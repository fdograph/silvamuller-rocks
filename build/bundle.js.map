{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/backgrounds/dark-lines.svelte","../../src/backgrounds/yellow.svelte","../../node_modules/strict-uri-encode/index.js","../../node_modules/decode-uri-component/index.js","../../node_modules/split-on-first/index.js","../../node_modules/query-string/index.js","../../src/helpers.ts","../../src/backgrounds/circles.svelte","../../src/backgrounds/waves.svelte","../../src/backgrounds/spirals.svelte","../../src/backgrounds/bullets.svelte","../../src/backgrounds/solar.svelte","../../src/backgrounds/cubes.svelte","../../src/iconLink.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.29.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    import { onMount, tick } from 'svelte';\n\n    const hueStart = 250;\n    const hueEnd = 180;\n\n    let container: HTMLDivElement;\n    let lines = [];\n\n    const render = async () => {\n        await tick();\n\n        const height = container.offsetHeight;\n        const count = Math.round(height * 0.05);\n        const hueStep = Math.abs(hueStart - hueEnd) / count;\n\n        lines = [...new Array(count)].map((v, i) => ({\n            index: i,\n            y: (100 / count) * i,\n            color: `hsl(${(hueStart + (hueStep * i))}deg, 100%, 50%)`,\n            delay: (100 / count) * i * i,\n        }));\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n\n<div bind:this={container} >\n    <svg>\n        {#each lines as line}\n            <line\n                x1=\"0\"\n                y1=\"{line.y}%\"\n                x2=\"100%\"\n                y2=\"{line.y}%\"\n                stroke=\"{line.color}\"\n                style=\"animation-delay: {line.delay}ms;\"\n            />\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes appear {\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    div {\n        position: absolute;\n        pointer-events: none;\n        display: flex;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        animation-name: appear;\n        animation-duration: 500ms;\n        animation-timing-function: ease;\n        animation-direction: normal;\n        animation-fill-mode: both;\n        opacity: 0;\n        transform: translateY(80px);\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount, tick } from 'svelte';\n\n    let container: HTMLDivElement;\n    let lines = [];\n\n    const degree2radian = (a: number) => a * 0.017453292519;\n    const calculateX = (x: number, l: number, a: number) => x + l * Math.cos(a);\n    const calculateY = (y: number, l: number, a: number) => y + l * Math.sin(a);\n\n    const angle = -30;\n    const ra = degree2radian(angle);\n\n    const render = async () => {\n        await tick();\n\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const count = Math.round(height * 0.3);\n        const distance = width * 3;\n        const x1 = width / 2 * -1;\n\n        lines = [...new Array(count)].map((v, i) => {\n            const l = Math.floor(Math.random() * 400) + 20;\n            const y1 = Math.floor(Math.random() * height * 5);\n\n            const x2 = calculateX(x1, l, ra);\n            const y2 = calculateY(y1, l, ra);\n\n            const x3 = calculateX(x2, distance, ra);\n            const y3 = calculateY(y2, distance, ra);\n\n            const x4 = calculateX(x3, l, ra);\n            const y4 = calculateY(y3, l, ra);\n\n            const speed = Math.floor(Math.random() * distance * 10) + distance;\n\n            return {\n                x1,\n                y1,\n                x2,\n                y2,\n                x3,\n                y3,\n                x4,\n                y4,\n                speed,\n            };\n        });\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each lines as line}\n            <line\n                    x1=\"{line.x1}\"\n                    y1=\"{line.y1}\"\n                    x2=\"{line.x2}\"\n                    y2=\"{line.y2}\"\n            >\n                <animate repeatCount=\"indefinite\" attributeName=\"x1\" from=\"{line.x1}\" to=\"{line.x3}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"y1\" from=\"{line.y1}\" to=\"{line.y3}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"x2\" from=\"{line.x2}\" to=\"{line.x4}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"y2\" from=\"{line.y2}\" to=\"{line.y4}\" begin=\"0\" dur=\"{line.speed}ms\" />\n            </line>\n        {/each}\n    </svg>\n</div>\n\n<style>\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n    }\n</style>\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (value === null || value === undefined || value.length === 0) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${encode(object.fragmentIdentifier, options)}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n","import queryString from \"query-string\";\nexport const getParams = (location) => {\n    const params = queryString.parse(location.search);\n    return params ? params : undefined;\n};\nexport const degree2radian = (a) => a * 0.017453292519;\nexport const calculateX = (x, l, a) => x + l * Math.cos(a);\nexport const calculateY = (y, l, a) => y + l * Math.sin(a);\nexport const createPoint = (x, y) => ({ x, y });\nexport const randomPoint = (w, h) => createPoint(randomBetween(0, w), randomBetween(0, h));\nexport const projectPoint = (point, l, a) => createPoint(calculateX(point.x, l, degree2radian(a)), calculateY(point.y, l, degree2radian(a)));\nexport const createLine = (origin, length, angle = 0) => ({\n    a: origin,\n    b: projectPoint(origin, length, angle),\n});\nexport const randomBetween = (min, max) => Math.round(Math.random() * max) + min;\nfunction lineIntersection(m1, b1, m2, b2) {\n    if (m1 === m2) {\n        throw new Error(\"parallel slopes\");\n    }\n    const x = (b2 - b1) / (m1 - m2);\n    return { x: x, y: m1 * x + b1 };\n}\nfunction pStr(point) {\n    return `${point.x},${point.y} `;\n}\nexport function buildSpiral(center, startRadius, spacePerLoop, startTheta, endTheta, thetaStep) {\n    // Rename spiral parameters for the formula r = a + bθ\n    const a = startRadius; // start distance from center\n    const b = spacePerLoop / Math.PI / 2; // space between each loop\n    let newTheta = startTheta;\n    // convert angles to radians\n    let oldTheta = newTheta = startTheta * Math.PI / 180;\n    endTheta = endTheta * Math.PI / 180;\n    thetaStep = thetaStep * Math.PI / 180;\n    // radii\n    let oldR, newR = a + b * newTheta;\n    // start and end points\n    const oldPoint = { x: 0, y: 0 };\n    const newPoint = {\n        x: center.x + newR * Math.cos(newTheta),\n        y: center.y + newR * Math.sin(newTheta)\n    };\n    // slopes of tangents\n    let oldSlope, newSlope = (b * Math.sin(oldTheta) + (a + b * newTheta) * Math.cos(oldTheta)) /\n        (b * Math.cos(oldTheta) - (a + b * newTheta) * Math.sin(oldTheta));\n    let path = \"M \" + pStr(newPoint);\n    while (oldTheta < endTheta - thetaStep) {\n        oldTheta = newTheta;\n        newTheta += thetaStep;\n        oldR = newR;\n        newR = a + b * newTheta;\n        oldPoint.x = newPoint.x;\n        oldPoint.y = newPoint.y;\n        newPoint.x = center.x + newR * Math.cos(newTheta);\n        newPoint.y = center.y + newR * Math.sin(newTheta);\n        // Slope calculation with the formula:\n        // (b * sinΘ + (a + bΘ) * cosΘ) / (b * cosΘ - (a + bΘ) * sinΘ)\n        const aPlusBTheta = a + b * newTheta;\n        oldSlope = newSlope;\n        newSlope = (b * Math.sin(newTheta) + aPlusBTheta * Math.cos(newTheta)) /\n            (b * Math.cos(newTheta) - aPlusBTheta * Math.sin(newTheta));\n        const oldIntercept = -(oldSlope * oldR * Math.cos(oldTheta) - oldR * Math.sin(oldTheta));\n        const newIntercept = -(newSlope * newR * Math.cos(newTheta) - newR * Math.sin(newTheta));\n        const controlPoint = lineIntersection(oldSlope, oldIntercept, newSlope, newIntercept);\n        // Offset the control point by the center offset.\n        controlPoint.x += center.x;\n        controlPoint.y += center.y;\n        path += \"Q \" + pStr(controlPoint) + pStr(newPoint);\n    }\n    return path;\n}\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { randomBetween } from \"../helpers\";\n\n    let container: HTMLDivElement;\n    let circles = [];\n\n    const lowerBounds = (d: number) => d * 0.75 * -1;\n    const upperBounds = (d: number) => d * 1.9;\n\n    const render = async () => {\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const base = width > height ? width : height;\n        const count = Math.round(base * 0.03);\n\n        circles = [...new Array(count)].map((v, i) => {\n            const x1 = randomBetween(lowerBounds(width), upperBounds(width));\n            const y1 = randomBetween(lowerBounds(height), upperBounds(height));\n\n            const radius = randomBetween(base / 3, base * 1.5);\n            const circunf = Math.ceil((Math.PI * 2) * radius);\n            const segment = circunf / 1.5;\n            const speed = randomBetween(4000, 20000);\n            const delay = randomBetween(0, 500);\n\n            return {\n                radius,\n                circunf,\n                segment,\n                x1, y1,\n                speed,\n                delay,\n            };\n        });\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each circles as c}\n            <circle\n                cx=\"{c.x1}\"\n                cy=\"{c.y1}\"\n                r=\"{c.radius}\"\n                style=\"\n                    --circunf: {c.circunf};\n                    --cx: {c.x1}px;\n                    --cy: {c.y1}px;\n                    --speed: {c.speed}ms;\n                    --delay: {c.delay}ms;\n                    --segment: {c.segment};\n                \"\n            />\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes rotateCircle {\n        from {\n            transform: translateZ(0) rotateZ(0deg);\n        }\n        to {\n            transform: translateZ(0) rotateZ(360deg);\n        }\n    }\n\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n        backface-visibility: hidden;\n    }\n\n    svg circle {\n        --circunf: 0;\n        --segment: 0;\n        --cx: 0;\n        --cy: 0;\n        --speed: 5000ms;\n        --delay: 0ms;\n        fill: none;\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n        stroke-dasharray: var(--segment), var(--circunf);\n        backface-visibility: visible;\n        transform: translateZ(0) rotateZ(0deg);\n        transform-origin: var(--cx) var(--cy);\n        animation-name: rotateCircle;\n        animation-duration: var(--speed);\n        animation-delay: var(--delay);\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n\n    const gridIteration = (rows: number, cols: number, block: (x: number, y: number) => void) => {\n        for(let y = 0; y <= rows; y++) {\n            for(let x = 0; x <= cols; x++) {\n                block(x, y);\n            }\n        }\n    };\n\n    let container: HTMLDivElement;\n    let circles = [];\n\n    const render = () => {\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const base = width > height ? width : height;\n        const outerRadius = 50 * (width / base);\n        const gap = outerRadius / 3;\n        const innerWidth = width - gap;\n        const innerHeight = height - gap;\n        const innerRadius = outerRadius + gap * 2;\n        const blockWidth = (outerRadius * 2) - (gap / 2);\n        const xCount = Math.floor(innerWidth / blockWidth);\n        const yCount = Math.floor(innerHeight / blockWidth);\n\n        const restX = innerWidth - (xCount * blockWidth) + gap;\n        const restY = innerHeight - (yCount * blockWidth) + gap;\n\n        const grid = [];\n        gridIteration(yCount, xCount, (col, row) => {\n            const cx = (blockWidth * col) + (restX / 2);\n            const cy = (blockWidth * row) + (restY / 2);\n            const radius = innerRadius;\n            const delay = 60 * (grid.length / 2) * -1;\n            const size = blockWidth;\n\n            grid.push({\n                cx, cy, radius, delay, size\n            });\n        });\n        circles = grid;\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each circles as c, index}\n            <circle\n                cx=\"{c.cx}\"\n                cy=\"{c.cy}\"\n                r=\"{c.radius}\"\n                style=\"\n                    --cx: {c.x1}px;\n                    --cy: {c.y1}px;\n                    --delay: {c.delay}ms;\n                    --size: {c.size}px;\n                    \"\n            />\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes shakeIt {\n        to {\n            transform: translateZ(0) translateY(-2%) translateX(2%);\n        }\n    }\n\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg circle {\n        --cx: 0px;\n        --cy: 0px;\n        --delay: 0;\n        --size: 0px;\n        fill: var(--bg-color);\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n        transform: translateZ(0) translateY(0) translateX(0);\n        transform-origin: var(--cx) var(--cy);\n        animation-name: shakeIt;\n        animation-duration: 4000ms;\n        animation-timing-function: cubic-bezier(0.74, -2.1, 0.12, 2.82);\n        animation-direction: alternate;\n        animation-fill-mode: both;\n        animation-iteration-count: infinite;\n        animation-delay: var(--delay);\n    }\n</style>\n","<script lang=\"ts\">\n    import type {Point} from \"../helpers.ts\";\n    import {buildSpiral} from \"../helpers.ts\";\n    import {onMount} from \"svelte\";\n\n    interface Spiral {\n        path: string;\n        isOdd: boolean;\n        dash: number;\n        center: Point;\n    }\n\n    const getSpiralPath = (center: Point, distance: number) => buildSpiral(\n        center,\n        0,\n        distance,\n        0,\n        60 * 360,\n        30\n    );\n    const count = 3;\n\n    let container: HTMLDivElement;\n    let spirals: Spiral[] = [];\n\n    const render = () => {\n        spirals = [];\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const d = height / 8;\n        // const dash = Math.log10(width * 300) * (Math.log10(width) * 50);\n        const dash = 5000;\n\n        const ax = 0;\n        const ay = 0;\n        const centerA = { x: ax, y: ay };\n\n        const spiralA = {\n            center: centerA,\n            isOdd: false,\n            dash,\n            path: getSpiralPath(centerA, d),\n        };\n        spirals.push(spiralA);\n\n        const centerB = { x: width, y: height };\n        const spiralB = {\n            center: centerB,\n            isOdd: true,\n            dash,\n            path: getSpiralPath(centerB, d),\n        };\n        spirals.push(spiralB);\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each spirals as spiral}\n            <path\n                class=\"{spiral.isOdd ? 'odd' : ''}\"\n                d=\"{spiral.path}\"\n                style=\"\n                    --x: {spiral.center.x}px;\n                    --y: {spiral.center.y}px;\n                \"\n            />\n            <path\n                class=\"mirror {spiral.isOdd ? 'odd' : ''}\"\n                d=\"{spiral.path}\"\n                style=\"\n                    --x: {spiral.center.x}px;\n                    --y: {spiral.center.y}px;\n                \"\n            />\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes spiralRotate {\n        to {\n            transform: scale(1, .4) translateZ(0) rotateZ(-900deg);\n        }\n    }\n\n    @keyframes spiralRotateMirror {\n        to {\n            transform: scale(-1, .4) translateZ(0) rotateZ(360deg);\n        }\n    }\n\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg path {\n        --x: 0px;\n        --y: 0px;\n        --dash: 200;\n        fill: none;\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n        transform: scale(1, .4) translateZ(0) rotateZ(0);\n        transform-origin: var(--x) var(--y);\n        animation-name: spiralRotate;\n        animation-duration: 20000ms;\n        animation-delay: 0;\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n        animation-direction: alternate-reverse;\n        /*stroke-dasharray: var(--dash);*/\n    }\n\n    svg path.odd {\n        /*animation-duration: 3000ms;*/\n        /*animation-delay: -1000ms;*/\n        animation-duration: 10000ms;\n    }\n\n    svg path.mirror {\n        --x: 0px;\n        --y: 0px;\n        transform: scale(-1, .4) translateZ(0) rotateZ(0);\n        transform-origin: var(--x) var(--y);\n        animation-name: spiralRotateMirror;\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import {createLine, projectPoint, randomBetween, randomPoint} from \"../helpers\";\n    import type { Point, LineCoords } from \"../helpers.ts\";\n\n    let container: HTMLDivElement;\n\n    interface TargetProps {\n        target: Point;\n        speed: number;\n        delay: number;\n        rays: LineCoords[];\n    }\n    let targets: TargetProps[] = [];\n\n    const buildRays = (target: Point, distance: number , length: number, angle: number) => {\n        const mirrorAngle = 180 - angle;\n\n        const topLeftPointAngle = mirrorAngle * -1;\n        const topLeftPoint = projectPoint(target, distance, topLeftPointAngle);\n        const topLeftRay = createLine(topLeftPoint, length, topLeftPointAngle);\n\n        const topRightPointAngle = angle * -1;\n        const topRightPoint = projectPoint(target, distance, topRightPointAngle);\n        const topRightRay = createLine(topRightPoint, length, topRightPointAngle);\n\n        const bottomLeftPointAngle = mirrorAngle;\n        const bottomLeftPoint = projectPoint(target, distance, bottomLeftPointAngle);\n        const bottomLeftRay = createLine(bottomLeftPoint, length, bottomLeftPointAngle);\n\n        const bottomRightPointAngle = angle;\n        const bottomRightPoint = projectPoint(target, distance, bottomRightPointAngle);\n        const bottomRightRay = createLine(bottomRightPoint, length, bottomRightPointAngle);\n\n        return [\n            topLeftRay,\n            topRightRay,\n            bottomLeftRay,\n            bottomRightRay\n        ];\n    };\n\n    const render = () => {\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const base = width > height ? width : height;\n        const count = 20;\n\n        targets = [...new Array(count)].map((v, i) => {\n            const target = randomPoint(width, height);\n            const distance = base;\n            const length = 400;\n            const speed = randomBetween(1500, 4500);\n            const delay = randomBetween(-10000, 10000);\n            const angle = 45;\n\n            return {\n                target,\n                speed,\n                delay,\n                rays: buildRays(target, distance, length, angle),\n            }\n        });\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each targets as target}\n            {#each target.rays as ray}\n                <line\n                        x1=\"{target.target.x}\"\n                        y1=\"{target.target.y}\"\n                        x2=\"{target.target.x}\"\n                        y2=\"{target.target.y}\"\n                >\n                    <animate\n                            repeatCount=\"indefinite\"\n                            attributeName=\"x1\"\n                            from=\"{target.target.x}\"\n                            to=\"{ray.a.x}\"\n                            begin=\"{target.delay}ms\"\n                            dur=\"{target.speed}ms\"\n                    />\n                    <animate\n                            repeatCount=\"indefinite\"\n                            attributeName=\"y1\"\n                            from=\"{target.target.y}\"\n                            to=\"{ray.a.y}\"\n                            begin=\"{target.delay}ms\"\n                            dur=\"{target.speed}ms\"\n                    />\n\n                    <animate\n                            repeatCount=\"indefinite\"\n                            attributeName=\"x2\"\n                            from=\"{target.target.x}\"\n                            to=\"{ray.b.x}\"\n                            begin=\"{target.delay}ms\"\n                            dur=\"{target.speed}ms\"\n                    />\n                    <animate\n                            repeatCount=\"indefinite\"\n                            attributeName=\"y2\"\n                            from=\"{target.target.y}\"\n                            to=\"{ray.b.y}\"\n                            begin=\"{target.delay}ms\"\n                            dur=\"{target.speed}ms\"\n                    />\n                </line>\n            {/each}\n        {/each}\n    </svg>\n</div>\n\n<style>\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import {createLine, randomBetween, randomPoint} from \"../helpers\";\n    import type { Point, LineCoords } from \"../helpers\";\n\n    let container: HTMLDivElement;\n\n    interface TargetProps {\n        target: Point;\n        speed: number;\n        delay: number;\n        rays: LineCoords[];\n    }\n    let targets: TargetProps[] = [];\n\n    const sunRays = (center: Point, length: number, count: number, angleStart: number = 0, angleEnd: number = 360) => {\n        const angleLength = angleEnd - angleStart;\n        const angleStep = Math.ceil(angleLength / count);\n        return [...new Array(count)].map((v, i) => createLine(center, length, angleStep * i));\n    };\n\n    const render = () => {\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const base = width > height ? width : height;\n        const rayLength = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        const count = Math.round(base * 0.007);\n\n        targets = [...new Array(count)].map((v, i) => {\n            const target = randomPoint(width, height);\n            const speed = randomBetween(5000, 15000);\n            const delay = randomBetween(0, 1000);\n\n            return {\n                target,\n                speed,\n                delay,\n                rays: sunRays(target, rayLength, 50),\n            }\n        });\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each targets as target}\n            <g\n                class=\"sun\"\n                style=\"\n                    --cx: {target.target.x}px;\n                    --cy: {target.target.y}px;\n                    --speed: {target.speed}ms;\n                    --delay: {target.delay}ms;\n                \"\n            >\n                {#each target.rays as ray, index}\n                    <line\n                            x1=\"{target.target.x}\"\n                            y1=\"{target.target.y}\"\n                            x2=\"{target.target.x}\"\n                            y2=\"{target.target.y}\"\n                    >\n                        <animate\n                                repeatCount=\"indefinite\"\n                                attributeName=\"x1\"\n                                from=\"{target.target.x}\"\n                                to=\"{ray.b.x}\"\n                                begin=\"{target.delay}ms\"\n                                dur=\"{target.speed}ms\"\n                                calcMode=\"spline\"\n                                keyTimes=\"0;1\"\n                                keySplines=\"1 0 1 1\"\n                        />\n                        <animate\n                                repeatCount=\"indefinite\"\n                                attributeName=\"y1\"\n                                from=\"{target.target.y}\"\n                                to=\"{ray.b.y}\"\n                                begin=\"{target.delay}ms\"\n                                dur=\"{target.speed}ms\"\n                                calcMode=\"spline\"\n                                keyTimes=\"0;1\"\n                                keySplines=\"1 0 1 1\"\n                        />\n                        <animate\n                                repeatCount=\"indefinite\"\n                                attributeName=\"x2\"\n                                from=\"{target.target.x}\"\n                                to=\"{ray.b.x}\"\n                                begin=\"{target.delay}ms\"\n                                dur=\"{target.speed}ms\"\n                        />\n                        <animate\n                                repeatCount=\"indefinite\"\n                                attributeName=\"y2\"\n                                from=\"{target.target.y}\"\n                                to=\"{ray.b.y}\"\n                                begin=\"{target.delay}ms\"\n                                dur=\"{target.speed}ms\"\n                        />\n                    </line>\n                {/each}\n            </g>\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes spin {\n        to {\n            transform: translateZ(0) rotateZ(-360deg);\n        }\n    }\n\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg .sun {\n        --cx: 0;\n        --cy: 0;\n        --speed: 0;\n        --delay: 0;\n        transform: translateZ(0) rotateZ(0);\n        transform-origin: var(--cx) var(--cy);\n        animation-name: spin;\n        animation-duration: 70000ms;\n        animation-delay: var(--delay);\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n    }\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { createPoint } from \"../helpers\";\n    import type { Point } from \"../helpers\";\n\n    let container: HTMLDivElement;\n    let cubes = [];\n\n    const concentricCubes = (center: Point, min: number, max: number, count: number) => {\n        const diff = max - min;\n        const step = Math.ceil(diff / count);\n        return [...new Array(count)].map((v, i) => ({ center, size: min + (step * i) }));\n    };\n\n    const render = async () => {\n        const height = container.offsetHeight;\n        const width = container.offsetWidth;\n        const center = createPoint(width/3 * 2, height/3 * 2);\n        const minSize = width * 0.035;\n        const maxSize = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n        cubes = concentricCubes(center, minSize, maxSize, 8);\n    };\n\n    onMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} class=\"container\" >\n    {#each cubes as cube, index}\n        <div\n                class=\"cube\"\n                style=\"\n                    --cube-size: {cube.size}px;\n                    --cx: {cube.center.x}px;\n                    --cy: {cube.center.y}px;\n                    --speed: {(index + 1) * 4000}ms;\n                \"\n        >\n            <div class=\"side front\"></div>\n            <div class=\"side back\"></div>\n            <div class=\"side left\"></div>\n            <div class=\"side right\"></div>\n            <div class=\"side top\"></div>\n            <div class=\"side bottom\"></div>\n        </div>\n    {/each}\n</div>\n\n<style type=\"text/postcss\">\n    @keyframes cubeSpin {\n        0% {\n            transform: rotateX(0deg) rotateY(0) rotateZ(0) translateZ(0);\n        }\n        100% {\n            transform: rotateX(360deg) rotateY(360deg) rotateZ(0) translateZ(0);\n        }\n    }\n\n    .container {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n        position: relative;\n        perspective: 800px;\n        overflow: hidden;\n    }\n\n    .cube {\n        --cx: 100px;\n        --cy: 100px;\n        --cube-size: 100px;\n        --delay: 15ms;\n        --speed: 30s;\n        position: absolute;\n        top: calc(var(--cy) - (var(--cube-size) / 2));\n        left: calc(var(--cx) - (var(--cube-size) / 2));\n        display: flex;\n        width: var(--cube-size);\n        height: var(--cube-size);\n        transform-style: preserve-3d;\n        backface-visibility: visible;\n        transform: rotateX(0) rotateY(0) rotateZ(0) translateZ(0);\n        animation-name: cubeSpin;\n        animation-duration: var(--speed);\n        animation-timing-function: linear;\n        animation-iteration-count: infinite;\n        animation-delay: var(--delay);\n    }\n\n    .cube .side {\n        display: flex;\n        align-content: stretch;\n        justify-content: stretch;\n        position: absolute;\n        width: var(--cube-size);\n        height: var(--cube-size);\n        backface-visibility: visible;\n        border: 1px solid var(--fg-color);\n        /*background: var(--bg-color);*/\n    }\n\n    .cube .side.front {\n         transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2));\n    }\n    .cube .side.back {\n         transform: rotateY(180deg)\n         translateZ(calc(var(--cube-size) / 2));\n    }\n    .cube .side.right {\n         transform: rotateY(90deg)\n         translateZ(calc(var(--cube-size) / 2));\n    }\n    .cube .side.left {\n         transform: rotateY(-90deg)\n         translateZ(calc(var(--cube-size) / 2));\n    }\n    .cube .side.top {\n         transform: rotateX(90deg)\n         translateZ(calc(var(--cube-size) / 2));\n    }\n    .cube .side.bottom {\n         transform: rotateX(-90deg)\n         translateZ(calc(var(--cube-size) / 2));\n    }\n</style>\n","<script lang=\"ts\">\n    import Github from './icons/github.svelte';\n    import Linkedin from './icons/linkedIn.svelte';\n    import Npm from './icons/npm.svelte';\n\n    export let type: 'github' | 'linkedin' | 'npm';\n    export let linkUrl: string;\n    export let title: string;\n</script>\n\n<a href=\"{linkUrl}\" title=\"{title}\" target=\"_blank\">\n    <span>\n        {#if type === 'github'}\n            <Github />\n        {:else if type === 'linkedin'}\n            <Linkedin />\n        {:else if type === 'npm'}\n            <Npm />\n        {/if}\n    </span>\n</a>\n\n<style>\n    a {\n        display: inline-flex;\n    }\n\n    a:hover span > :global(svg)  {\n        fill: var(--action-color);\n        transform: scale(1.2);\n    }\n\n    span {\n        --icon-size: 28px;\n        display: inline-flex;\n        width: var(--icon-size);\n        height: var(--icon-size);\n    }\n\n    span > :global(svg) {\n        display: inline-flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n        fill: var(--bg-color);\n        transform: scale(1);\n        transition: all 200ms ease;\n    }\n</style>\n","<script lang=\"ts\">\n    import DarkLines from './backgrounds/dark-lines.svelte';\n    import Yellow from './backgrounds/yellow.svelte';\n    import Circles from './backgrounds/circles.svelte';\n    import Waves from './backgrounds/waves.svelte';\n    import Spirals from './backgrounds/spirals.svelte';\n    import Bullets from './backgrounds/bullets.svelte';\n    import Solar from './backgrounds/solar.svelte';\n    import Cubes from './backgrounds/cubes.svelte';\n    import Content from \"./content.svelte\";\n    import { getParams } from \"./helpers\";\n\n    const themes = [\n        'spirals',\n        'dark-lines',\n        'yellow',\n        'circles',\n        'waves',\n        'bullets',\n        'solar',\n        'cubes',\n    ];\n    type ThemeName = typeof themes[number];\n\n    const params = getParams<{theme: ThemeName}>(window.location);\n    const urlTheme = params.theme && themes.indexOf(params.theme) !== -1 ? themes.indexOf(params.theme) : null;\n    const defaultIndex = urlTheme !== null ? urlTheme : Math.floor(Math.random() * (themes.length - 1));\n    let currentTheme: ThemeName = themes[defaultIndex];\n\n    const flipTheme = () => {\n        const currIndex = themes.indexOf(currentTheme);\n        const nextIndex = currIndex === themes.length - 1 ? 0 : currIndex + 1;\n        currentTheme = themes[nextIndex];\n    }\n</script>\n\n<main class=\"{currentTheme}\">\n    <div class=\"background\">\n        {#if currentTheme === 'dark-lines'}\n            <DarkLines />\n        {:else if currentTheme === 'yellow'}\n            <Yellow />\n        {:else if currentTheme === 'circles'}\n            <Circles />\n        {:else if currentTheme === 'waves'}\n            <Waves />\n        {:else if currentTheme === 'spirals'}\n            <Spirals />\n        {:else if currentTheme === 'bullets'}\n            <Bullets />\n        {:else if currentTheme === 'solar'}\n            <Solar />\n        {:else if currentTheme === 'cubes'}\n            <Cubes />\n        {/if}\n    </div>\n\n    <Content />\n\n    <button on:click={flipTheme} title=\"Click me to change the theme\">Click me :)</button>\n</main>\n\n<style>\n    :root {\n        --bg-color: hsl(0deg, 0%, 5%);\n        --bg-color-transparent: hsl(0deg, 0%, 5%, 0);\n        --fg-color: #ededed;\n        --action-color: hsl(255deg, 100%, 50%);\n    }\n\n    main.dark-lines {\n        --bg-color: hsl(0deg, 0%, 5%);\n        --fg-color: #ededed;\n        --action-color: hsl(255deg, 100%, 50%);\n    }\n\n    main.yellow {\n        --bg-color: hsl(45 100% 50%);\n        --fg-color: hsl(0, 0%, 15%);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.circles {\n        --bg-color: hsl(330 100% 45%);\n        --fg-color: hsl(0, 0%, 15%);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.waves {\n        --bg-color: hsl(65 100% 55% / 1);\n        --fg-color: hsl(220deg 100% 55%);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.spirals {\n        --bg-color: hsl(0deg 0% 10%);\n        --fg-color: hsl(100 100% 55% / 1);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.bullets {\n        --bg-color: hsl(240 100% 30% / 1);\n        --fg-color: hsl(0deg 0% 100%);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.solar {\n        --bg-color: hsl(0deg 100% 60%);\n        --fg-color: hsl(200 50% 30% / 1);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main.cubes {\n        --bg-color: hsl(0 0% 80% / 1);\n        --fg-color: hsl(330 100% 50% / 1);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        background: var(--bg-color);\n        color: var(--fg-color);\n    }\n\n    .background {\n        position: absolute;\n        pointer-events: none;\n        display: flex;\n        width: 100%;\n        height: 100%;\n        z-index: 1;\n    }\n\n    button {\n        display: flex;\n        align-self: flex-start;\n        z-index: 10;\n        margin: 0 0 4vw 6vw;\n        -webkit-appearance: none;\n        appearance: none;\n        background-color: var(--fg-color);\n        color: var(--bg-color);\n        border: none;\n        padding: .5em .75em;\n        border-radius: 1em;\n        line-height: 1;\n        font-weight: 600;\n    }\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_style","key","important","style","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","tick","add_render_callback","flushing","seen_callbacks","Set","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","skip_bound","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","y","color","delay","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","e","rejected","result","done","apply","container","lines","render","height","offsetHeight","count","Math","round","hueStep","abs","hueStart","v","x1","x3","speed","y1","y3","x2","x4","y2","y4","calculateX","x","cos","calculateY","sin","ra","width","offsetWidth","distance","floor","random","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","left","slice","right","prototype","concat","call","decode","input","tokens","match","encodedURI","TypeError","replace","replaceMap","%FE%FF","%FF%FE","exec","entries","customDecodeURIComponent","string","separator","separatorIndex","validateArrayFormatSeparator","encode","strict","encodeURIComponent","charCodeAt","toString","toUpperCase","decodeComponent","keysSorter","isArray","sort","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","parse","query","assign","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","parserForArrayFormat","param","splitOnFirst","k","reduce","Boolean","exports","object","shouldFilter","skipNull","skipEmptyString","encoderForArrayFormat","objectCopy","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","queryFromUrl","parsedQueryFromUrl","queryString","stringify","getHash","degree2radian","createPoint","randomPoint","w","h","randomBetween","projectPoint","point","createLine","origin","angle","min","max","lineIntersection","m1","b1","m2","b2","pStr","radius","circunf","segment","circles","lowerBounds","upperBounds","base","ceil","PI","cx","cy","size","outerRadius","gap","innerWidth","innerHeight","innerRadius","blockWidth","xCount","yCount","restX","restY","grid","rows","cols","gridIteration","col","row","isOdd","path","center","getSpiralPath","startRadius","spacePerLoop","startTheta","endTheta","thetaStep","newTheta","oldTheta","oldR","newR","newPoint","oldSlope","newSlope","aPlusBTheta","controlPoint","buildSpiral","spirals","centerA","spiralA","dash","centerB","spiralB","rays","targets","buildRays","mirrorAngle","topLeftPointAngle","topLeftPoint","topLeftRay","topRightPointAngle","topRightPoint","topRightRay","bottomLeftPointAngle","bottomLeftPoint","bottomLeftRay","bottomRightPointAngle","bottomRightPoint","sunRays","angleStart","angleEnd","angleLength","angleStep","rayLength","sqrt","pow","cubes","minSize","maxSize","diff","concentricCubes","linkUrl","title","themes","params","location","window","search","urlTheme","theme","defaultIndex","currentTheme","currIndex","nextIndex","body"],"mappings":"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"}