{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "dark-lines.svelte",
    "yellow.svelte",
    "content.svelte",
    "iconLink.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import DarkLines from './backgrounds/dark-lines.svelte';\nimport Yellow from './backgrounds/yellow.svelte';\nimport Content from \"./content.svelte\";\nconst themes = ['dark-lines', 'yellow'];\nconst randomIndex = Math.round(Math.random() * (themes.length - 1));\nlet currentTheme = themes[randomIndex];\nconst flipTheme = () => {\n    const currIndex = themes.indexOf(currentTheme);\n    const nextIndex = currIndex === themes.length - 1 ? 0 : currIndex + 1;\n    currentTheme = themes[nextIndex];\n};\n</script>\n\n<main class=\"{currentTheme}\">\n    <div class=\"background\">\n        {#if currentTheme === 'dark-lines'}\n            <DarkLines />\n        {:else}\n            <Yellow />\n        {/if}\n    </div>\n\n    <Content />\n\n    <button on:click={flipTheme} title=\"Click me to change the theme\">Click me :)</button>\n</main>\n\n<style>\n    :root {\n        --bg-color: hsl(0deg, 0%, 5%);\n        --fg-color: #ededed;\n        --action-color: hsl(255deg, 100%, 50%);\n    }\n\n    main.dark-lines {\n        --bg-color: hsl(0deg, 0%, 5%);\n        --fg-color: #ededed;\n        --action-color: hsl(255deg, 100%, 50%);\n    }\n\n    main.yellow {\n        --bg-color: hsl(45 100% 50%);\n        --fg-color: hsl(0, 0%, 15%);\n        --action-color: hsl(255 100% 50%);\n    }\n\n    main {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        background: var(--bg-color);\n        color: var(--fg-color);\n    }\n\n    .background {\n        position: absolute;\n        pointer-events: none;\n        display: flex;\n        width: 100%;\n        height: 100%;\n    }\n\n    button {\n        display: flex;\n        align-self: flex-start;\n        z-index: 10;\n        margin: 0 0 4vw 6vw;\n        -webkit-appearance: none;\n        appearance: none;\n        background-color: var(--fg-color);\n        color: var(--bg-color);\n        border: none;\n        padding: .5em .75em;\n        border-radius: 1em;\n        line-height: 1;\n        font-weight: 600;\n    }\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nconst hueStart = 250;\nconst hueEnd = 180;\nlet container;\nlet lines = [];\nconst render = () => {\n    const height = container.offsetHeight;\n    const count = Math.round(height * 0.05);\n    const hueStep = Math.abs(hueStart - hueEnd) / count;\n    lines = [...new Array(count)].map((v, i) => ({\n        index: i,\n        y: (100 / count) * i,\n        color: `hsl(${(hueStart + (hueStep * i))}deg, 100%, 50%)`,\n        delay: (100 / count) * i * i,\n    }));\n};\nonMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n\n<div bind:this={container} >\n    <svg>\n        {#each lines as line}\n            <line\n                x1=\"0\"\n                y1=\"{line.y}%\"\n                x2=\"100%\"\n                y2=\"{line.y}%\"\n                stroke=\"{line.color}\"\n                style=\"animation-delay: {line.delay}ms;\"\n            />\n        {/each}\n    </svg>\n</div>\n\n<style>\n    @keyframes appear {\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    div {\n        position: absolute;\n        pointer-events: none;\n        display: flex;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        animation-name: appear;\n        animation-duration: 500ms;\n        animation-timing-function: ease;\n        animation-direction: normal;\n        animation-fill-mode: both;\n        opacity: 0;\n        transform: translateY(80px);\n    }\n</style>\n",
    "<script lang=\"ts\">import { onMount } from 'svelte';\nlet container;\nlet lines = [];\nconst degree2radian = (a) => a * 0.017453292519;\nconst calculateX = (x, l, a) => x + l * Math.cos(a);\nconst calculateY = (y, l, a) => y + l * Math.sin(a);\nconst angle = -30;\nconst ra = degree2radian(angle);\nconst render = () => {\n    const height = container.offsetHeight;\n    const width = container.offsetWidth;\n    const count = Math.round(height * 0.3);\n    const distance = width * 3;\n    const x1 = width * -1;\n    lines = [...new Array(count)].map((v, i) => {\n        const l = Math.floor(Math.random() * 400) + 20;\n        const y1 = Math.floor(Math.random() * height * 5);\n        const x2 = calculateX(x1, l, ra);\n        const y2 = calculateY(y1, l, ra);\n        const x3 = calculateX(x2, distance, ra);\n        const y3 = calculateY(y2, distance, ra);\n        const x4 = calculateX(x3, l, ra);\n        const y4 = calculateY(y3, l, ra);\n        const speed = Math.floor(Math.random() * distance * 10) + distance;\n        return {\n            x1,\n            y1,\n            x2,\n            y2,\n            x3,\n            y3,\n            x4,\n            y4,\n            speed,\n        };\n    });\n};\nonMount(render);\n</script>\n\n<svelte:window on:resize={render}/>\n<div bind:this={container} >\n    <svg>\n        {#each lines as line}\n            <line\n                    x1=\"{line.x1}\"\n                    y1=\"{line.y1}\"\n                    x2=\"{line.x2}\"\n                    y2=\"{line.y2}\"\n            >\n                <animate repeatCount=\"indefinite\" attributeName=\"x1\" from=\"{line.x1}\" to=\"{line.x3}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"y1\" from=\"{line.y1}\" to=\"{line.y3}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"x2\" from=\"{line.x2}\" to=\"{line.x4}\" begin=\"0\" dur=\"{line.speed}ms\" />\n                <animate repeatCount=\"indefinite\" attributeName=\"y2\" from=\"{line.y2}\" to=\"{line.y4}\" begin=\"0\" dur=\"{line.speed}ms\" />\n            </line>\n        {/each}\n    </svg>\n</div>\n\n<style>\n    div {\n        display: flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n    }\n\n    svg {\n        display: block;\n        flex: 1;\n    }\n\n    svg line {\n        stroke-width: 1px;\n        stroke: var(--fg-color);\n    }\n</style>\n",
    "<script lang=\"ts\">import IconLink from \"./iconLink.svelte\";\n</script>\n\n<div class=\"container\">\n    <div class=\"title\">\n        <h1>Fernando<br/>Silva<br/>MÃ¼ller</h1>\n        <h2>Fullstack developer</h2>\n    </div>\n    <div class=\"socials\">\n        <IconLink type=\"github\" title=\"Check out my Github!\" linkUrl=\"https://github.com/fdograph\" />\n        <IconLink type=\"linkedin\" title=\"LinkedIn Profile\" linkUrl=\"https://www.linkedin.com/in/fernando-silva-muller\" />\n        <IconLink type=\"npm\" title=\"Npm profile\" linkUrl=\"https://www.npmjs.com/~fdograph\" />\n    </div>\n</div>\n\n<style>\n    @keyframes appear {\n        to {\n            opacity: 1;\n            transform: translateY(0);\n        }\n    }\n\n    .container {\n        flex: 1;\n        padding: 4vw 6vw;\n    }\n\n    h1, h2, .socials {\n        animation-name: appear;\n        animation-duration: 500ms;\n        animation-timing-function: ease;\n        animation-direction: normal;\n        animation-fill-mode: both;\n        opacity: 0;\n        transform: translateY(80px);\n    }\n\n    h1 {\n        font-size: 54px;\n        font-weight: 800;\n        line-height: 1.2em;\n        animation-delay: 300ms;\n    }\n\n    h2 {\n        font-size: 28px;\n        font-weight: 400;\n        animation-delay: 500ms;\n    }\n\n    .socials {\n        margin-top: 18px;\n        background: var(--fg-color);\n        padding: .5em 0.75em;\n        border-radius: 1em;\n        display: inline-flex;\n        animation-delay: 700ms;\n    }\n\n    .socials > :global(a):not(:first-child) {\n        margin-left: 1.5em;\n    }\n</style>\n",
    "<script lang=\"ts\">import Github from './icons/github.svelte';\nimport Linkedin from './icons/linkedIn.svelte';\nimport Npm from './icons/npm.svelte';\nexport let type;\nexport let linkUrl;\nexport let title;\n</script>\n\n<a href=\"{linkUrl}\" title=\"{title}\" target=\"_blank\">\n    <span>\n        {#if type === 'github'}\n            <Github />\n        {:else if type === 'linkedin'}\n            <Linkedin />\n        {:else if type === 'npm'}\n            <Npm />\n        {/if}\n    </span>\n</a>\n\n<style>\n    a {\n        display: inline-flex;\n    }\n\n    a:hover span > :global(svg)  {\n        fill: var(--action-color);\n        transform: scale(1.2);\n    }\n\n    span {\n        --icon-size: 28px;\n        display: inline-flex;\n        width: var(--icon-size);\n        height: var(--icon-size);\n    }\n\n    span > :global(svg) {\n        display: inline-flex;\n        flex: 1;\n        width: 100%;\n        height: 100%;\n        fill: var(--bg-color);\n        transform: scale(1);\n        transition: all 200ms ease;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}