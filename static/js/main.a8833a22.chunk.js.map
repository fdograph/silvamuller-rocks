{"version":3,"sources":["App/globalStyles.tsx","common/logic/theme.ts","context/ThemeContext.tsx","common/components/IconLink.tsx","common/components/Icons/index.tsx","common/components/Content.tsx","hooks/index.ts","common/logic/geometry.ts","common/components/Background/Yellow.tsx","common/components/Background/Circles.tsx","common/components/Background/DarkLines.tsx","common/components/Background/Waves.tsx","common/components/Background/Bullets.tsx","common/components/Background/Solar.tsx","common/components/Background/Cubes.tsx","common/components/Background/SquareDance.tsx","common/components/Background/index.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","props","primary","secondary","baseTheme","defaultThemeConf","darkLines","yellow","circles","waves","bullets","solar","cubes","squareDance","themeKeys","Object","keys","themesConfig","Map","entries","selectTheme","name","has","config","get","randomName","Math","floor","random","length","ThemeContext","createContext","setTheme","n","Error","next","theme","ThemeContextProvider","children","query","location","useLocation","URLSearchParams","search","useQuery","useState","currentTheme","setCurrentTheme","updateTheme","useCallback","currentName","keySeq","size","currentIndex","indexOf","nextIndex","nextTheme","Provider","value","StyledLink","styled","a","IconLink","className","title","href","icon","aria-label","target","rel","Github","xmlns","aria-hidden","focusable","role","viewBox","d","LinkedIn","Npm","appear","keyframes","Wrapper","div","Socials","Content","useWindowSize","width","window","innerWidth","height","innerHeight","setSize","onResize","useLayoutEffect","addEventListener","removeEventListener","lowerBounds","factor","upperBounds","degree2radian","calculateX","x","l","cos","calculateY","y","sin","createPoint","isEven","randomPoint","w","h","randomBetween","projectPoint","point","createLine","origin","angle","b","min","max","round","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","addUnit","val","unit","gridIteration","rows","cols","block","Svg","svg","Yellow","lines","useMemo","count","distance","x1","ra","Array","map","v","i","y1","x2","y2","x3","y3","x4","y4","speed","repeatCount","attributeName","from","to","begin","dur","renderLines","rotate","Arc","path","vars","delay","renderArcs","base","angleLength","startAngle","endAngle","start","end","largeArcFlag","join","describeArc","cssVars","Circles","arcs","toHsl","turnBy","place","step","Line","line","startHue","DarkLines","hueStep","hue","style","animationDelay","shake","Waves","content","outerRadius","gap","innerRadius","blockWidth","xCount","yCount","restX","restY","grid","col","row","cx","cy","push","r","transformOrigin","renderContent","mirrorAngle","topLeftPointAngle","topLeftPoint","topLeftRay","topRightPointAngle","topRightPoint","topRightRay","bottomLeftPointAngle","bottomLeftPoint","bottomLeftRay","bottomRightPointAngle","bottomRightPoint","buildRays","ray","flat","Infinity","Bullets","spin","rayLength","sqrt","pow","rays","center","angleStep","ceil","sunRays","calcMode","keyTimes","keySplines","Solar","cubeSpin","Cube","diff","concentricCubes","cube","Cubes","isVertical","vMax","vMin","maxCount","minCount","xShift","YShift","isEvenCol","isEvenRow","isMarked","duration","centerOfSquare","classNames","marked","animationDuration","SquareDance","BgWrapper","SvgWrapper","renderAnimation","Background","MainWrapper","main","ActionsWrapper","Button","button","App","useContext","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8833a22.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { ThemeColors } from '../common/logic/theme';\n\nexport const GlobalStyle = createGlobalStyle<Partial<ThemeColors>>`\n  :root {\n    --primary-color: ${(props) => props.primary};\n    --secondary-color: ${(props) => props.secondary}\n  }\n  \n  *, *::before, *::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n  \n  html, body {\n    height: 100%;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    \n    background: var(--primary-color);\n    color: var(--secondary-color);\n    \n    display: flex;\n    flex-direction: column;\n    \n    #root {\n      flex: 1;\n    }\n  }\n`;\n","import { Map } from 'immutable';\n\nexport interface ThemeColors {\n  primary: string;\n  secondary: string;\n}\n\nexport const baseTheme: ThemeColors = {\n  primary: 'hsl(0, 0%, 10%)',\n  secondary: 'hsl(0, 0%, 90%)',\n};\nconst defaultThemeConf = {\n  darkLines: {\n    primary: 'hsl(0, 0%, 10%)',\n    secondary: 'hsl(0, 0%, 90%)',\n  },\n  yellow: {\n    primary: 'hsl(45, 100%, 50%)',\n    secondary: 'hsl(0, 0%, 15%)',\n  },\n  circles: {\n    primary: 'hsl(330, 100%, 45%)',\n    secondary: 'hsl(0, 0%, 15%)',\n  },\n  waves: {\n    primary: 'hsl(65, 100%, 55%)',\n    secondary: 'hsl(220, 100%, 55%)',\n  },\n  bullets: {\n    primary: 'hsl(240, 100%, 30%)',\n    secondary: 'hsl(0, 0%, 100%)',\n  },\n  solar: {\n    primary: 'hsl(0, 100%, 60%)',\n    secondary: 'hsl(200, 50%, 30%)',\n  },\n  cubes: {\n    primary: 'hsl(180, 20%, 15%)',\n    secondary: 'hsl(60, 100%, 65%)',\n  },\n  squareDance: {\n    primary: 'hsl(175, 100%, 50%)',\n    secondary: 'hsl(15, 100%, 65%)',\n  },\n};\n\nexport type ThemeName = keyof typeof defaultThemeConf;\nexport const themeKeys = Object.keys(defaultThemeConf) as ThemeName[];\n\ntype ThemeEntry = [ThemeName, ThemeColors];\nconst themesConfig = Map<ThemeName, ThemeColors>(\n  Object.entries(defaultThemeConf) as ThemeEntry[]\n);\n\nexport interface Theme {\n  name: ThemeName;\n  config: ThemeColors;\n}\nexport function selectTheme(name?: ThemeName): Theme {\n  if (name && themesConfig.has(name)) {\n    return {\n      name,\n      config: themesConfig.get(name, baseTheme),\n    };\n  }\n\n  const randomName =\n    themeKeys[Math.floor(Math.random() * (themeKeys.length - 1))];\n\n  return {\n    name: randomName,\n    config: themesConfig.get(randomName, baseTheme),\n  };\n}\n\nexport function nextTheme(currentName: ThemeName): Theme {\n  const keys = themesConfig.keySeq();\n  const size = keys.size || 0;\n  const currentIndex = keys.indexOf(currentName);\n  const nextIndex = currentIndex >= size - 1 ? 0 : currentIndex + 1;\n\n  return selectTheme(keys.get(nextIndex));\n}\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  nextTheme,\n  selectTheme,\n  Theme,\n  ThemeName,\n} from '../common/logic/theme';\n\nexport const useQuery = () => {\n  const location = useLocation();\n  return new URLSearchParams(location.search);\n};\n\ninterface ThemeContextValue {\n  setTheme: (name: ThemeName) => void;\n  next: () => void;\n  theme: Theme;\n}\nexport const ThemeContext = createContext<ThemeContextValue>({\n  setTheme: (n: ThemeName) => {\n    throw new Error('No Context provider found');\n  },\n  next: () => {\n    throw new Error('No Context provider found');\n  },\n  theme: selectTheme('darkLines'),\n});\n\nexport const ThemeContextProvider: React.FC<PropsWithChildren<{}>> = ({\n  children,\n}) => {\n  const query = useQuery();\n  const [currentTheme, setCurrentTheme] = useState<Theme>(\n    selectTheme(query.get('theme') as ThemeName)\n  );\n  const updateTheme = useCallback(\n    (name: ThemeName) => setCurrentTheme(selectTheme(name)),\n    []\n  );\n\n  const next = useCallback(() => {\n    return setCurrentTheme(nextTheme(currentTheme.name));\n  }, [currentTheme]);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        setTheme: updateTheme,\n        theme: currentTheme,\n        next,\n      }}\n      children={children}\n    />\n  );\n};\n\nexport const useThemes = () => useContext(ThemeContext);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLink = styled.a<{ size: number }>`\n  display: inline-flex;\n  margin: 0 5px;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  span {\n    --icon-size: ${({ size }) => size}px;\n    width: var(--icon-size);\n    height: var(--icon-size);\n    display: inline-flex;\n    background: var(--secondary-color);\n    padding: 5px;\n    border-radius: 100em;\n    transition: all 250ms ease;\n  }\n\n  &:hover span {\n    background: var(--primary-color);\n  }\n\n  span > svg {\n    display: inline-flex;\n    flex: 1;\n    width: 100%;\n    height: 100%;\n    fill: var(--primary-color);\n    transform: scale(1);\n    transition: all 250ms ease;\n  }\n\n  &:hover span > svg {\n    transform: scale(0.8);\n    fill: var(--secondary-color);\n  }\n`;\n\nexport interface IconLinkProps {\n  className?: string;\n  title: string;\n  href: string;\n  icon: React.ReactNode;\n}\n\nexport const IconLink: React.FC<IconLinkProps> = ({\n  className,\n  title,\n  href,\n  icon,\n}) => {\n  return (\n    <StyledLink\n      size={40}\n      className={className}\n      href={href}\n      title={title}\n      aria-label={title}\n      target=\"_blank\"\n      rel=\"external nofollow\"\n    >\n      <span>{icon}</span>\n    </StyledLink>\n  );\n};\n","import React from 'react';\n\nexport const Github: React.FC<{ className?: string }> = ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"img\"\n    viewBox=\"0 0 496 512\"\n  >\n    <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n  </svg>\n);\n\nexport const LinkedIn: React.FC<{ className?: string }> = ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"img\"\n    viewBox=\"0 0 448 512\"\n  >\n    <path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\" />\n  </svg>\n);\n\nexport const Npm: React.FC<{ className?: string }> = ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    aria-hidden=\"true\"\n    focusable=\"false\"\n    role=\"img\"\n    viewBox=\"0 0 576 512\"\n  >\n    <path d=\"M288 288h-32v-64h32v64zm288-128v192H288v32H160v-32H0V160h576zm-416 32H32v128h64v-96h32v96h32V192zm160 0H192v160h64v-32h64V192zm224 0H352v128h64v-96h32v96h32v-96h32v96h32V192z\" />\n  </svg>\n);\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { IconLink } from './IconLink';\nimport { Github, LinkedIn, Npm } from './Icons';\n\nconst appear = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(80px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst Wrapper = styled.div`\n  flex: 1;\n  z-index: 10;\n  transform: translateZ(0);\n\n  h1,\n  h2,\n  .socials {\n    animation-name: ${appear};\n    animation-duration: 500ms;\n    animation-timing-function: ease;\n    animation-direction: normal;\n    animation-fill-mode: both;\n    opacity: 0;\n    transform: translateY(80px);\n  }\n\n  h1 {\n    font-size: 54px;\n    font-weight: 800;\n    line-height: 1.2em;\n    animation-delay: 300ms;\n  }\n\n  h2 {\n    font-size: 28px;\n    font-weight: 400;\n    animation-delay: 500ms;\n  }\n\n  .socials {\n    animation-delay: 700ms;\n  }\n`;\n\nconst Socials = styled.div`\n  margin-top: 18px;\n  background: var(--secondary-color);\n  padding: 4px 6px;\n  border-radius: 48px;\n  display: inline-flex;\n`;\n\nexport const Content: React.FC = () => {\n  return (\n    <Wrapper>\n      <h1>\n        Fernando\n        <br />\n        Silva\n        <br />\n        Müller\n      </h1>\n      <h2>Fullstack developer</h2>\n\n      <Socials className=\"socials\">\n        <IconLink\n          title=\"Check out my Github!\"\n          href=\"https://github.com/fdograph\"\n          icon={<Github />}\n        />\n        <IconLink\n          title=\"LinkedIn Profile\"\n          href=\"https://www.linkedin.com/in/fernando-silva-muller\"\n          icon={<LinkedIn />}\n        />\n        <IconLink\n          title=\"Npm profile\"\n          href=\"https://www.npmjs.com/~fdograph\"\n          icon={<Npm />}\n        />\n      </Socials>\n    </Wrapper>\n  );\n};\n","import { useCallback, useLayoutEffect, useState } from 'react';\n\ninterface WindowSize {\n  width: number;\n  height: number;\n}\n\nexport const useWindowSize = () => {\n  const [size, setSize] = useState<WindowSize>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  const onResize = useCallback(() => {\n    setSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [onResize]);\n\n  return size;\n};\n","export interface Point {\n  x: number;\n  y: number;\n}\n\nexport interface LineCoords {\n  a: Point;\n  b: Point;\n}\n\nexport const lowerBounds = (d: number, factor: number) => d * factor * -1;\nexport const upperBounds = (d: number, factor: number) => d * factor;\n\nexport const degree2radian = (a: number): number => a * 0.017453292519;\nexport const calculateX = (x: number, l: number, a: number): number =>\n  x + l * Math.cos(a);\nexport const calculateY = (y: number, l: number, a: number): number =>\n  y + l * Math.sin(a);\nexport const createPoint = (x: number, y: number): Point => ({ x, y });\n\nexport const centerOfSquare = (x: number, y: number, size: number) =>\n  createPoint(x + size / 2, y + size / 2);\n\nexport const isEven = (n: number) => n % 2 !== 0;\n\nexport const randomPoint = (w: number, h: number): Point =>\n  createPoint(randomBetween(0, w), randomBetween(0, h));\nexport const projectPoint = (point: Point, l: number, a: number): Point =>\n  createPoint(\n    calculateX(point.x, l, degree2radian(a)),\n    calculateY(point.y, l, degree2radian(a))\n  );\nexport const createLine = (\n  origin: Point,\n  length: number,\n  angle = 0\n): LineCoords => ({\n  a: origin,\n  b: projectPoint(origin, length, angle),\n});\n\nexport const randomBetween = (min: number, max: number): number =>\n  Math.round(Math.random() * max) + min;\n\nconst lineIntersection = (\n  m1: number,\n  b1: number,\n  m2: number,\n  b2: number\n): Point => {\n  if (m1 === m2) {\n    throw new Error('parallel slopes');\n  }\n  const x = (b2 - b1) / (m1 - m2);\n  return createPoint(x, m1 * x + b1);\n};\n\nconst pStr = (point: Point): string => {\n  return `${point.x},${point.y} `;\n};\n\nexport function buildSpiral(\n  center: Point,\n  startRadius: number,\n  spacePerLoop: number,\n  startTheta: number,\n  endTheta: number,\n  thetaStep: number\n): string {\n  // Rename spiral parameters for the formula r = a + bθ\n  const a = startRadius; // start distance from center\n  const b = spacePerLoop / Math.PI / 2; // space between each loop\n  let newTheta = startTheta;\n\n  // convert angles to radians\n  let oldTheta = (newTheta = (startTheta * Math.PI) / 180);\n  endTheta = (endTheta * Math.PI) / 180;\n  thetaStep = (thetaStep * Math.PI) / 180;\n\n  // radii\n  let oldR,\n    newR = a + b * newTheta;\n\n  // start and end points\n  const oldPoint = { x: 0, y: 0 };\n  const newPoint = {\n    x: center.x + newR * Math.cos(newTheta),\n    y: center.y + newR * Math.sin(newTheta),\n  };\n\n  // slopes of tangents\n  let oldSlope,\n    newSlope =\n      (b * Math.sin(oldTheta) + (a + b * newTheta) * Math.cos(oldTheta)) /\n      (b * Math.cos(oldTheta) - (a + b * newTheta) * Math.sin(oldTheta));\n\n  let path = 'M ' + pStr(newPoint);\n\n  while (oldTheta < endTheta - thetaStep) {\n    oldTheta = newTheta;\n    newTheta += thetaStep;\n\n    oldR = newR;\n    newR = a + b * newTheta;\n\n    oldPoint.x = newPoint.x;\n    oldPoint.y = newPoint.y;\n    newPoint.x = center.x + newR * Math.cos(newTheta);\n    newPoint.y = center.y + newR * Math.sin(newTheta);\n\n    // Slope calculation with the formula:\n    // (b * sinΘ + (a + bΘ) * cosΘ) / (b * cosΘ - (a + bΘ) * sinΘ)\n    const aPlusBTheta = a + b * newTheta;\n\n    oldSlope = newSlope;\n    newSlope =\n      (b * Math.sin(newTheta) + aPlusBTheta * Math.cos(newTheta)) /\n      (b * Math.cos(newTheta) - aPlusBTheta * Math.sin(newTheta));\n\n    const oldIntercept = -(\n      oldSlope * oldR * Math.cos(oldTheta) -\n      oldR * Math.sin(oldTheta)\n    );\n    const newIntercept = -(\n      newSlope * newR * Math.cos(newTheta) -\n      newR * Math.sin(newTheta)\n    );\n\n    const controlPoint = lineIntersection(\n      oldSlope,\n      oldIntercept,\n      newSlope,\n      newIntercept\n    );\n\n    // Offset the control point by the center offset.\n    controlPoint.x += center.x;\n    controlPoint.y += center.y;\n\n    path += 'Q ' + pStr(controlPoint) + pStr(newPoint);\n  }\n\n  return path;\n}\n\nexport function polarToCartesian(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number\n): Point {\n  const angleInRadians = degree2radian(angleInDegrees);\n\n  return createPoint(\n    centerX + radius * Math.cos(angleInRadians),\n    centerY + radius * Math.sin(angleInRadians)\n  );\n}\n\nexport function describeArc(\n  x: number,\n  y: number,\n  radius: number,\n  startAngle: number,\n  endAngle: number\n): string {\n  const start = polarToCartesian(x, y, radius, endAngle);\n  const end = polarToCartesian(x, y, radius, startAngle);\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n  return [\n    'M',\n    start.x,\n    start.y,\n    'A',\n    radius,\n    radius,\n    0,\n    largeArcFlag,\n    0,\n    end.x,\n    end.y,\n  ].join(' ');\n}\n\nexport const addUnit = (val: number, unit: string) => `${val}${unit}`;\n\nexport const gridIteration = (\n  rows: number,\n  cols: number,\n  block: (x: number, y: number) => void\n) => {\n  for (let y = 0; y <= rows; y++) {\n    for (let x = 0; x <= cols; x++) {\n      block(x, y);\n    }\n  }\n};\n\nexport const sunRays = (\n  center: Point,\n  length: number,\n  count: number,\n  angleStart: number = 0,\n  angleEnd: number = 360\n) => {\n  const angleLength = angleEnd - angleStart;\n  const angleStep = Math.ceil(angleLength / count);\n  return [...new Array(count)].map((v, i) =>\n    createLine(center, length, angleStep * i)\n  );\n};\n\nexport const concentricCubes = (\n  center: Point,\n  min: number,\n  max: number,\n  count: number\n) => {\n  const diff = max - min;\n  const step = Math.ceil(diff / count);\n  return [...new Array(count)].map((v, i) => ({\n    center,\n    size: step + step * i,\n  }));\n};\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  calculateX,\n  calculateY,\n  degree2radian,\n  randomBetween,\n} from '../../logic/geometry';\nimport styled from 'styled-components';\n\nconst Svg = styled.svg`\n  line {\n    stroke-width: 1px;\n    stroke: var(--secondary-color);\n  }\n`;\n\nconst renderLines = (width: number, height: number) => {\n  const count = Math.round(height * 0.3);\n  const distance = width * 3;\n  const x1 = (width / 2) * -1;\n  const angle = -30;\n  const ra = degree2radian(angle);\n\n  return [...new Array(count)].map((v, i) => {\n    const l = randomBetween(20, 400);\n    const y1 = Math.floor(Math.random() * height * 5);\n\n    const x2 = calculateX(x1, l, ra);\n    const y2 = calculateY(y1, l, ra);\n\n    const x3 = calculateX(x2, distance, ra);\n    const y3 = calculateY(y2, distance, ra);\n\n    const x4 = calculateX(x3, l, ra);\n    const y4 = calculateY(y3, l, ra);\n\n    const speed = Math.floor(Math.random() * distance * 10) + distance;\n\n    return (\n      <line key={`${x1}:${x2}:${y1}:${y2}`} x1={x1} y1={y1} x2={x2} y2={y2}>\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"x1\"\n          from={x1}\n          to={x3}\n          begin=\"0\"\n          dur={`${speed}ms`}\n        />\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"y1\"\n          from={y1}\n          to={y3}\n          begin=\"0\"\n          dur={`${speed}ms`}\n        />\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"x2\"\n          from={x2}\n          to={x4}\n          begin=\"0\"\n          dur={`${speed}ms`}\n        />\n        <animate\n          repeatCount=\"indefinite\"\n          attributeName=\"y2\"\n          from={y2}\n          to={y4}\n          begin=\"0\"\n          dur={`${speed}ms`}\n        />\n      </line>\n    );\n  });\n};\n\nconst Yellow: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const lines = useMemo(() => renderLines(width, height), [height, width]);\n\n  return <Svg>{lines}</Svg>;\n};\n\nexport default Yellow;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  addUnit,\n  describeArc,\n  lowerBounds,\n  randomBetween,\n  upperBounds,\n} from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  0% {\n    transform: translateZ(0) rotateZ(0deg);\n  }\n  100% {\n    transform: translateZ(0) rotateZ(360deg);\n  }\n`;\n\ninterface ArcCssVars {\n  x: string;\n  y: string;\n  radius: string;\n  speed: string;\n  delay: string;\n  path: string;\n}\n\nconst Arc = styled.path<{ vars: ArcCssVars }>`\n  --cx: ${({ vars }) => vars.x};\n  --cy: ${({ vars }) => vars.y};\n  --speed: ${({ vars }) => vars.speed};\n  --delay: ${({ vars }) => vars.delay};\n  fill: none;\n  stroke-width: 1px;\n  stroke: var(--secondary-color);\n  backface-visibility: visible;\n  transform: translateZ(0) rotateZ(0deg);\n  transform-origin: var(--cx) var(--cy);\n  animation-name: ${rotate};\n  animation-duration: var(--speed);\n  animation-delay: var(--delay);\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n`;\n\nconst renderArcs = (width: number, height: number) => {\n  const base = width > height ? width : height;\n  const count = Math.round(base * 0.03);\n\n  return [...new Array(count)].map((n, i) => {\n    const x = randomBetween(lowerBounds(width, 0.25), upperBounds(width, 1.25));\n    const y = randomBetween(\n      lowerBounds(height, 0.25),\n      upperBounds(height, 1.25)\n    );\n    const radius = randomBetween(base / 3, base * 1.5);\n    const angleLength = randomBetween(45, 100);\n\n    const speed = randomBetween(4000, 20000);\n    const delay = randomBetween(0, 500);\n    const path = describeArc(x, y, radius, angleLength * -1, angleLength);\n\n    const cssVars = {\n      x: addUnit(x, 'px'),\n      y: addUnit(y, 'px'),\n      radius: addUnit(radius, 'px'),\n      speed: addUnit(speed, 'ms'),\n      delay: addUnit(delay, 'ms'),\n      path,\n    };\n\n    return <Arc key={`${x}:${y}`} d={path} vars={cssVars} />;\n  });\n};\n\nconst Circles: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const arcs = useMemo(() => renderArcs(width, height), [height, width]);\n  return <svg>{arcs}</svg>;\n};\n\nexport default Circles;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport { addUnit } from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst toHsl = (h: number) => `hsl(${h}, 100%, 50%)`;\n\nconst turnBy = (h: number, count: number, place: number) => {\n  const step = 360 / count;\n  return h + (step * place + step);\n};\n\nconst generateHueKeyframes = (startHue: number) => {\n  return keyframes`\n  0% {\n    stroke: ${toHsl(turnBy(startHue, 5, 0))}\n  }\n  10% {\n    stroke: ${toHsl(turnBy(startHue, 5, 1))}\n  }\n  20% {\n    stroke: ${toHsl(turnBy(startHue, 5, 2))}\n  }\n  30% {\n    stroke: ${toHsl(turnBy(startHue, 5, 3))}\n  }\n  40% {\n    stroke: ${toHsl(turnBy(startHue, 5, 4))}\n  }\n  50% {\n    stroke: ${toHsl(turnBy(startHue, 5, 0))}\n  }\n  60% {\n    stroke: ${toHsl(turnBy(startHue, 5, 1))}\n  }\n  70% {\n    stroke: ${toHsl(turnBy(startHue, 5, 2))}\n  }\n  80% {\n    stroke: ${toHsl(turnBy(startHue, 5, 3))}\n  }\n  90% {\n    stroke: ${toHsl(turnBy(startHue, 5, 4))}\n  }\n  100% {\n    stroke: ${toHsl(turnBy(startHue, 5, 5))}\n  }\n`;\n};\n\nconst Svg = styled.svg``;\n\nconst appear = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(100px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n`;\n\nconst Line = styled.line<{ vars: { startHue: number } }>`\n  stroke-width: 1px;\n  animation-name: ${appear},\n    ${(props) => generateHueKeyframes(props.vars.startHue)};\n  animation-duration: 500ms, 8000ms;\n  animation-timing-function: ease, linear;\n  animation-direction: normal, normal;\n  animation-fill-mode: both;\n  animation-iteration-count: 1, infinite;\n  opacity: 0;\n  transform: translateY(80px);\n`;\n\nconst renderLines = (width: number, height: number, startHue: number) => {\n  const hueRange = 100;\n  const count = Math.round(height * 0.05);\n  const hueStep = hueRange / count;\n\n  return [...new Array(count)].map((v, i) => {\n    const y = (100 / count) * i;\n    const hue = startHue + hueStep * i;\n    const delay = addUnit((100 / count) * i * i, 'ms');\n\n    return (\n      <Line\n        key={`${y}:${i}`}\n        x1=\"0\"\n        y1={addUnit(y, '%')}\n        x2=\"100%\"\n        y2={addUnit(y, '%')}\n        style={{ animationDelay: `${delay}, 0ms` }}\n        vars={{ startHue: hue }}\n      />\n    );\n  });\n};\n\nconst DarkLines: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const lines = useMemo(() => renderLines(width, height, 70), [height, width]);\n\n  return <Svg>{lines}</Svg>;\n};\n\nexport default DarkLines;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport { addUnit, gridIteration } from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst shake = keyframes`\n  0% {\n    transform: translateZ(0) translateY(0) translateX(0);\n  }\n  100% {\n    transform: translateZ(0) translateY(-2%) translateX(2%);\n  }\n`;\n\nconst Svg = styled.svg`\n  circle {\n    fill: var(--primary-color);\n    stroke-width: 1px;\n    stroke: var(--secondary-color);\n    transform: translateZ(0) translateY(0) translateX(0);\n    animation-name: ${shake};\n    animation-duration: 4000ms;\n    animation-timing-function: cubic-bezier(0.74, -2.1, 0.12, 2.82);\n    animation-direction: alternate;\n    animation-fill-mode: both;\n    animation-iteration-count: infinite;\n  }\n`;\n\nconst renderContent = (width: number, height: number) => {\n  const base = width > height ? width : height;\n  const outerRadius = 50 * (width / base);\n  const gap = outerRadius / 3;\n  const innerWidth = width;\n  const innerHeight = height;\n  const innerRadius = outerRadius + gap * 2;\n  const blockWidth = outerRadius * 2 - gap / 2;\n  const xCount = Math.floor(innerWidth / blockWidth);\n  const yCount = Math.floor(innerHeight / blockWidth);\n\n  const restX = innerWidth - xCount * blockWidth + gap;\n  const restY = innerHeight - yCount * blockWidth + gap;\n\n  const grid: JSX.Element[] = [];\n\n  gridIteration(yCount, xCount, (col, row) => {\n    const cx = blockWidth * col + restX / 2;\n    const cy = blockWidth * row + restY / 2;\n    const radius = innerRadius;\n    const delay = 60 * (grid.length / 2) * -1;\n\n    grid.push(\n      <circle\n        key={`${cx}:${cy}`}\n        cx={cx}\n        cy={cy}\n        r={radius}\n        style={{\n          transformOrigin: `${addUnit(cx, 'px')} ${addUnit(cy, 'px')}`,\n          animationDelay: addUnit(delay, 'ms'),\n        }}\n      />\n    );\n  });\n\n  return grid;\n};\n\nconst Waves: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const content = useMemo(() => renderContent(width, height), [height, width]);\n\n  return <Svg>{content}</Svg>;\n};\n\nexport default Waves;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  addUnit,\n  createLine,\n  Point,\n  projectPoint,\n  randomBetween,\n  randomPoint,\n} from '../../logic/geometry';\nimport styled from 'styled-components';\n\nconst Svg = styled.svg`\n  line {\n    stroke-width: 1px;\n    stroke: var(--secondary-color);\n  }\n`;\n\nconst buildRays = (\n  target: Point,\n  distance: number,\n  length: number,\n  angle: number\n) => {\n  const mirrorAngle = 180 - angle;\n\n  const topLeftPointAngle = mirrorAngle * -1;\n  const topLeftPoint = projectPoint(target, distance, topLeftPointAngle);\n  const topLeftRay = createLine(topLeftPoint, length, topLeftPointAngle);\n\n  const topRightPointAngle = angle * -1;\n  const topRightPoint = projectPoint(target, distance, topRightPointAngle);\n  const topRightRay = createLine(topRightPoint, length, topRightPointAngle);\n\n  const bottomLeftPointAngle = mirrorAngle;\n  const bottomLeftPoint = projectPoint(target, distance, bottomLeftPointAngle);\n  const bottomLeftRay = createLine(\n    bottomLeftPoint,\n    length,\n    bottomLeftPointAngle\n  );\n\n  const bottomRightPointAngle = angle;\n  const bottomRightPoint = projectPoint(\n    target,\n    distance,\n    bottomRightPointAngle\n  );\n  const bottomRightRay = createLine(\n    bottomRightPoint,\n    length,\n    bottomRightPointAngle\n  );\n\n  return [topLeftRay, topRightRay, bottomLeftRay, bottomRightRay];\n};\n\nconst renderContent = (width: number, height: number) => {\n  const base = width > height ? width : height;\n  const count = 20;\n\n  return [...new Array(count)]\n    .map(() => {\n      const target = randomPoint(width, height);\n      const distance = base;\n      const length = 400;\n      const speed = randomBetween(1500, 4500);\n      const delay = randomBetween(-10000, 10000);\n      const angle = 45;\n      const rays = buildRays(target, distance, length, angle);\n\n      return rays.map((ray, i) => (\n        <line\n          key={`${i}:${target.x}:${target.y}:${ray.a.x}:${ray.a.x}:${ray.b.x}:${ray.b.x}`}\n          x1={target.x}\n          y1={target.y}\n          x2={target.x}\n          y2={target.y}\n        >\n          <animate\n            repeatCount=\"indefinite\"\n            attributeName=\"x1\"\n            from={target.x}\n            to={ray.a.x}\n            begin={addUnit(delay, 'ms')}\n            dur={addUnit(speed, 'ms')}\n          />\n          <animate\n            repeatCount=\"indefinite\"\n            attributeName=\"y1\"\n            from={target.y}\n            to={ray.a.y}\n            begin={addUnit(delay, 'ms')}\n            dur={addUnit(speed, 'ms')}\n          />\n\n          <animate\n            repeatCount=\"indefinite\"\n            attributeName=\"x2\"\n            from={target.x}\n            to={ray.b.x}\n            begin={addUnit(delay, 'ms')}\n            dur={addUnit(speed, 'ms')}\n          />\n          <animate\n            repeatCount=\"indefinite\"\n            attributeName=\"y2\"\n            from={target.y}\n            to={ray.b.y}\n            begin={addUnit(delay, 'ms')}\n            dur={addUnit(speed, 'ms')}\n          />\n        </line>\n      ));\n    })\n    .flat(Infinity);\n};\n\nconst Bullets: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const content = useMemo(() => renderContent(width, height), [height, width]);\n\n  return <Svg>{content}</Svg>;\n};\n\nexport default Bullets;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  addUnit,\n  randomBetween,\n  randomPoint,\n  sunRays,\n} from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst spin = keyframes`\n  0% {\n    transform: translateZ(0) rotateZ(0);\n  }\n  100% {\n    transform: translateZ(0) rotateZ(-360deg);\n  }\n`;\n\nconst Svg = styled.svg`\n  .sun {\n    --cx: 0;\n    --cy: 0;\n    --speed: 0;\n    --delay: 0;\n    transform: translateZ(0) rotateZ(0);\n    animation-name: ${spin};\n    animation-duration: 70000ms;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n  }\n\n  line {\n    stroke-width: 1px;\n    stroke: var(--secondary-color);\n  }\n`;\n\nconst renderContent = (width: number, height: number) => {\n  const base = width > height ? width : height;\n  const rayLength = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  const count = Math.round(base * 0.007);\n\n  return [...new Array(count)].map((v, i) => {\n    const target = randomPoint(width, height);\n    const speed = randomBetween(5000, 15000);\n    const delay = randomBetween(0, 1000);\n    const rays = sunRays(target, rayLength, 50);\n\n    return (\n      <g\n        key={`${target.x}:${target.y}`}\n        className=\"sun\"\n        style={{\n          transformOrigin: `${addUnit(target.x, 'px')} ${addUnit(\n            target.y,\n            'px'\n          )}`,\n          animationDelay: addUnit(delay, 'ms'),\n        }}\n      >\n        {rays.map((ray) => (\n          <line\n            key={`${target.x}:${target.y}:${ray.a.x}:${ray.b.y}`}\n            x1={target.x}\n            y1={target.y}\n            x2={target.x}\n            y2={target.y}\n          >\n            <animate\n              repeatCount=\"indefinite\"\n              attributeName=\"x1\"\n              from={target.x}\n              to={ray.b.x}\n              begin={addUnit(delay, 'ms')}\n              dur={addUnit(speed, 'ms')}\n              calcMode=\"spline\"\n              keyTimes=\"0;1\"\n              keySplines=\"1 0 1 1\"\n            />\n            <animate\n              repeatCount=\"indefinite\"\n              attributeName=\"y1\"\n              from={target.y}\n              to={ray.b.y}\n              begin={addUnit(delay, 'ms')}\n              dur={addUnit(speed, 'ms')}\n              calcMode=\"spline\"\n              keyTimes=\"0;1\"\n              keySplines=\"1 0 1 1\"\n            />\n            <animate\n              repeatCount=\"indefinite\"\n              attributeName=\"x2\"\n              from={target.x}\n              to={ray.b.x}\n              begin={addUnit(delay, 'ms')}\n              dur={addUnit(speed, 'ms')}\n            />\n            <animate\n              repeatCount=\"indefinite\"\n              attributeName=\"y2\"\n              from={target.y}\n              to={ray.b.y}\n              begin={addUnit(delay, 'ms')}\n              dur={addUnit(speed, 'ms')}\n            />\n          </line>\n        ))}\n      </g>\n    );\n  });\n};\n\nconst Solar: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const content = useMemo(() => renderContent(width, height), [height, width]);\n\n  return <Svg>{content}</Svg>;\n};\n\nexport default Solar;\n","import React, { useMemo } from 'react';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  addUnit,\n  concentricCubes,\n  createPoint,\n  randomBetween,\n} from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst cubeSpin = keyframes`\n  0% {\n    transform: rotateX(0deg) rotateY(0) rotateZ(0) translateZ(0);\n  }\n  100% {\n    transform: rotateX(360deg) rotateY(360deg) rotateZ(0) translateZ(0);\n  }\n`;\n\ninterface CssVars {\n  x: string;\n  y: string;\n  speed: string;\n  size: string;\n  delay: string;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  perspective: 800px;\n  overflow: hidden;\n`;\n\nconst Cube = styled.div<{ vars: CssVars }>`\n  --cx: ${(props) => props.vars.x};\n  --cy: ${(props) => props.vars.y};\n  --cube-size: ${(props) => props.vars.size};\n  --delay: ${(props) => props.vars.delay};\n  --speed: ${(props) => props.vars.speed};\n  position: absolute;\n  top: calc(var(--cy) - (var(--cube-size) / 2));\n  left: calc(var(--cx) - (var(--cube-size) / 2));\n  display: flex;\n  width: var(--cube-size);\n  height: var(--cube-size);\n  transform-style: preserve-3d;\n  backface-visibility: visible;\n  transform: rotateX(0) rotateY(0) rotateZ(0) translateZ(0);\n  animation-name: ${cubeSpin};\n  animation-duration: var(--speed);\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n  animation-delay: var(--delay);\n\n  .side {\n    display: flex;\n    align-content: stretch;\n    justify-content: stretch;\n    position: absolute;\n    width: var(--cube-size);\n    height: var(--cube-size);\n    border: 1px solid var(--secondary-color);\n    border-radius: 100%;\n  }\n\n  .side.front {\n    transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2));\n  }\n  .side.back {\n    transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2));\n  }\n  .side.right {\n    transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2));\n  }\n  .side.left {\n    transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2));\n  }\n  .side.top {\n    transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2));\n  }\n  .side.bottom {\n    transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2));\n  }\n`;\n\nconst renderContent = (width: number, height: number) => {\n  const center = createPoint((width / 3) * 2, (height / 3) * 2);\n  const minSize = width * 0.03;\n  const maxSize = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n  const cubes = concentricCubes(center, minSize, maxSize, 5);\n  return cubes.map((cube, i) => (\n    <Cube\n      key={`${cube.center.x}:${cube.center.y}:${cube.size}`}\n      className=\"cube\"\n      vars={{\n        x: addUnit(cube.center.x, 'px'),\n        y: addUnit(cube.center.y, 'px'),\n        size: addUnit(cube.size, 'px'),\n        speed: addUnit((i + 1) * 5000, 'ms'),\n        delay: addUnit(randomBetween(15, (i + 1) * 5000 * -1), 'ms'),\n      }}\n    >\n      <div className=\"side front\" />\n      <div className=\"side back\" />\n      <div className=\"side left\" />\n      <div className=\"side right\" />\n      <div className=\"side top\" />\n      <div className=\"side bottom\" />\n    </Cube>\n  ));\n};\n\nconst Cubes: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const content = useMemo(() => renderContent(width, height), [height, width]);\n\n  return <Wrapper>{content}</Wrapper>;\n};\n\nexport default Cubes;\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useWindowSize } from '../../../hooks';\nimport {\n  addUnit,\n  centerOfSquare,\n  createPoint,\n  gridIteration,\n  isEven,\n  randomBetween,\n} from '../../logic/geometry';\nimport styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  0% {\n    transform: rotateZ(0);\n  }\n  100% {\n    transform:  rotateZ(720deg);\n  }\n`;\n\nconst Svg = styled.svg`\n  rect {\n    stroke-width: 0;\n    fill: transparent;\n    transform-origin: center center;\n  }\n\n  rect.marked {\n    stroke-width: 1px;\n    stroke: var(--secondary-color);\n    animation-name: ${rotate};\n    animation-duration: 10000ms;\n    animation-timing-function: ease;\n    animation-iteration-count: infinite;\n    animation-direction: normal;\n    animation-fill-mode: both;\n  }\n`;\n\nconst renderContent = (width: number, height: number) => {\n  const isVertical = width < height;\n  const vMax = isVertical ? height : width;\n  const vMin = isVertical ? width : height;\n\n  const size = 100;\n  const maxCount = Math.ceil(vMax / size);\n  const minCount = Math.ceil(vMin / size);\n\n  const xCount = isVertical ? minCount : maxCount;\n  const yCount = isVertical ? maxCount : minCount;\n\n  const xShift = (size * xCount - width) / 2;\n  const YShift = (size * yCount - height) / 2;\n\n  const duration = 10000;\n\n  const grid: JSX.Element[] = [];\n  gridIteration(yCount, xCount, (col, row) => {\n    const isEvenCol = isEven(col);\n    const isEvenRow = isEven(row);\n\n    const isMarked = (isEvenRow && isEvenCol) || (!isEvenRow && !isEvenCol);\n\n    const x = size * col - xShift;\n    const y = size * row - YShift;\n\n    const delay = randomBetween(0, duration / 2);\n    const speed = randomBetween(duration / 2, duration * 2);\n\n    const squareSize = size;\n    const center = centerOfSquare(x, y, squareSize);\n\n    grid.push(\n      <rect\n        className={classNames({\n          marked: isMarked,\n        })}\n        key={`${x}:${y}`}\n        x={x}\n        y={y}\n        width={squareSize}\n        height={squareSize}\n        style={{\n          transformOrigin: `${addUnit(center.x, 'px')} ${addUnit(\n            center.y,\n            'px'\n          )}`,\n          animationDelay: addUnit(delay, 'ms'),\n          animationDuration: addUnit(speed, 'ms'),\n        }}\n      />\n    );\n  });\n\n  return grid;\n};\n\nconst SquareDance: React.FC = () => {\n  const { width, height } = useWindowSize();\n  const content = useMemo(() => renderContent(width, height), [height, width]);\n\n  return <Svg>{content}</Svg>;\n};\n\nexport default SquareDance;\n","import React from 'react';\nimport { ThemeName } from '../../logic/theme';\nimport styled from 'styled-components';\nimport Yellow from './Yellow';\nimport Circles from './Circles';\nimport DarkLines from './DarkLines';\nimport Waves from './Waves';\nimport Bullets from './Bullets';\nimport Solar from './Solar';\nimport Cubes from './Cubes';\nimport SquareDance from './SquareDance';\n\nconst BgWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  pointer-events: none;\n  display: flex;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n`;\n\nconst SvgWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n\n  svg {\n    display: block;\n    flex: 1;\n  }\n`;\n\nconst renderAnimation = (theme: ThemeName) => {\n  switch (theme) {\n    case 'darkLines':\n      return <DarkLines />;\n    case 'circles':\n      return <Circles />;\n    case 'yellow':\n      return <Yellow />;\n    case 'waves':\n      return <Waves />;\n    case 'bullets':\n      return <Bullets />;\n    case 'solar':\n      return <Solar />;\n    case 'cubes':\n      return <Cubes />;\n    case 'squareDance':\n      return <SquareDance />;\n    default:\n      return <DarkLines />;\n  }\n};\n\nexport interface BackgroundProps {\n  theme: ThemeName;\n}\n\nconst Background: React.FC<BackgroundProps> = ({ theme }) => {\n  return (\n    <BgWrapper>\n      <SvgWrapper>{renderAnimation(theme)}</SvgWrapper>\n    </BgWrapper>\n  );\n};\n\nexport default Background;\n","import React, { Fragment } from 'react';\nimport { GlobalStyle } from './globalStyles';\nimport { useThemes } from '../context/ThemeContext';\nimport styled from 'styled-components';\nimport { Content } from '../common/components/Content';\nimport Background from '../common/components/Background';\n\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  background: var(--primary-color);\n  color: var(--secondary-color);\n  padding: 4vw 6vw;\n`;\n\nconst ActionsWrapper = styled.div`\n  flex: 0;\n  position: relative;\n  z-index: 10;\n`;\n\nconst Button = styled.button`\n  display: block;\n  cursor: pointer;\n  -webkit-appearance: none;\n  appearance: none;\n  background-color: var(--secondary-color);\n  color: var(--primary-color);\n  border: none;\n  padding: 0.5em 0.75em;\n  margin: 0;\n  border-radius: 1em;\n  line-height: 1;\n  font-size: 1.2em;\n  font-weight: 600;\n  box-shadow: none;\n  transform: scale(1);\n  transition: all 150ms ease;\n\n  &:hover,\n  &:active {\n    transform: scale(1.2);\n    background-color: var(--primary-color);\n    color: var(--secondary-color);\n    box-shadow: 0 0 1em rgba(0, 0, 0, 0.3);\n  }\n`;\n\nconst App: React.FC = () => {\n  const { theme, next } = useThemes();\n\n  return (\n    <Fragment>\n      <GlobalStyle {...theme.config} />\n      <MainWrapper>\n        <Background theme={theme.name} />\n        <Content />\n        <ActionsWrapper>\n          <Button onClick={() => next()} title=\"Click me to change the theme\">\n            Click me :)\n          </Button>\n        </ActionsWrapper>\n      </MainWrapper>\n    </Fragment>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeContextProvider } from './context/ThemeContext';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <ThemeContextProvider>\n        <App />\n      </ThemeContextProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}